steps:
- id: 'Generate krakend manifest'
  name: 'gcr.io/cloud-builders/gcloud'
  secretEnv: ['PROJECT_REGION']
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
      sed "s/_GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" krakend/krakend.tpl.json | \
      sed "s|_IRON_BANK_HOST_URL|${_IRON_BANK_HOST_URL}|g" | \
      sed "s|_WALL_REGISTER_HOST_URL|${_WALL_REGISTER_HOST_URL}|g" | \
      sed "s|_AUTH_JWK_URL|${_AUTH_JWK_URL}|g" | \
      sed "s|_AUTH_AUDIENCE|${_AUTH_AUDIENCE}|g" | \
      sed "s|_AUTH_SSO_AUDIENCE|${_AUTH_SSO_AUDIENCE}|g" | \
      sed "s/_PROJECT_REGION/$$PROJECT_REGION/g" > krakend/krakend.json
- id: 'Generate terraform manifest'
  name: 'gcr.io/cloud-builders/gcloud'
  secretEnv: ['PROJECT_REGION']
  entrypoint: /bin/sh
  args:
    - '-c'
    - |
      sed "s/_GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" terraform/terraform.tpl.tfvars | \
      sed "s/_PROJECT_REGION/$$PROJECT_REGION/g" > terraform/terraform.tfvars
- id: 'Terraform Init'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      cd terraform
      terraform init
- id: 'Terraform Plan'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      cd terraform
      terraform plan -var-file="terraform.tfvars"
- id: 'Terraform Apply'
  name: 'hashicorp/terraform:1.0.0'
  entrypoint: 'sh'
  args:
    - '-c'
    - |
      if [[ "$BRANCH_NAME" == "main" ]]; then
        cd terraform
        terraform apply -var-file="terraform.tfvars" -auto-approve
      else
        echo "***************************** SKIPPING APPLYING *******************************"
        echo "Branch '$BRANCH_NAME' does not represent an official environment."
        echo "*******************************************************************************"
      fi

availableSecrets:
  secretManager:
  - versionName: projects/$PROJECT_ID/secrets/project-region/versions/latest
    env: 'PROJECT_REGION'